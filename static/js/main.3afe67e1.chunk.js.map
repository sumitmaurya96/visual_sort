{"version":3,"sources":["components/sort/strip.jsx","components/sort/sort.jsx","components/navbar/navbar.jsx","components/footer/footer.jsx","components/algorithms.js","App.js","serviceWorker.js","index.js"],"names":["Strip","style","width","this","props","noOfStrips","height","margin","className","fontSize","value","backgroundColor","Component","Sort","display","alignItems","state","arr","length","map","stripLength","index","Math","max","apply","color","indexA","indexB","indexRangeOfSorted","range","to","from","key","Navbar","getClassOfInputbox","classname","isInput","isInputValid","toggleNavDropdown","isNavbarOpen","setState","toggleAlgoDropdown","isAlgorithmOpen","classOfInputbox","dropdownAlgorithmMenu","dropdownNavbarMenu","Fragment","id","onClick","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","window","location","reload","aria-haspopup","aria-labelledby","OnClick","ref","input","onInput","setInput","rows","cols","placeholder","Footer","href","Algorithm","delayed","queue","delay","cb","push","processQueue","setTimeout","shift","validateInput","val","temp","j","trim","i","charAt","isNaN","parseInt","toString","insertionSort","array","getState","loopControls","isSorting","breakSort","k","n","operation","sorted","speed","clearTimeout","isUndefined","quickSort","qSort","A","l","h","p","x","partition","selectionSort","min_idx","swap","bubbleSort","len","App","setSpeed","event","target","validateInputOnChange","backupArray","handleNavbarClick","name","algorithm","mergeSort","floor","random","onChange","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3afe67e1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Strip extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          width: `${100 / this.props.noOfStrips}%`\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            width: \"80%\",\r\n            height: \"20px\",\r\n            margin: \"0px auto\"\r\n          }}\r\n        >\r\n          <p className=\"text-center text-dark\" style={{ fontSize: \"10px\" }}>\r\n            {this.props.value}\r\n          </p>\r\n        </div>\r\n        <div\r\n          style={{\r\n            width: \"80%\",\r\n            height: `${this.props.style.height}px`,\r\n            backgroundColor: `${this.props.style.backgroundColor}`,\r\n            margin: \"0px auto\"\r\n          }}\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Strip;\r\n","import React, { Component } from \"react\";\r\nimport Strip from \"./strip\";\r\n\r\nclass Sort extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"flex-end\",\r\n            height: \"325px\",\r\n            margin: \"0px auto\",\r\n            width: `${this.props.state.arr.length * 3}%`\r\n          }}\r\n        >\r\n          {this.props.state.arr.map((stripLength, index) => {\r\n            let height =\r\n              (stripLength * 300) / Math.max.apply(null, this.props.state.arr);\r\n            let width =\r\n              this.props.state.arr.length <= 5\r\n                ? 200\r\n                : 1000 / this.props.state.arr.length;\r\n\r\n            let color = \"#4B65BA\";\r\n            if (index === this.props.state.color.indexA) {\r\n              color = \"green\";\r\n            }\r\n            if (index === this.props.state.color.indexB) {\r\n              color = \"green\";\r\n            } else if (\r\n              this.props.state.color.indexRangeOfSorted.range > 0 &&\r\n              index <= this.props.state.color.indexRangeOfSorted.to &&\r\n              index >= this.props.state.color.indexRangeOfSorted.from\r\n            ) {\r\n              color = \"red\";\r\n            }\r\n            return (\r\n              <Strip\r\n                value={stripLength}\r\n                style={{\r\n                  height: height,\r\n                  width: width,\r\n                  backgroundColor: color\r\n                }}\r\n                key={index}\r\n                noOfStrips={this.props.state.arr.length}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sort;\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isAlgorithmOpen: false, isNavbarOpen: false };\r\n  }\r\n\r\n  getClassOfInputbox = () => {\r\n    let classname = \"form-control \";\r\n    if (this.props.state.isInput) {\r\n      if (this.props.state.isInputValid && this.props.state.arr.length > 0)\r\n        classname += \"is-valid\";\r\n      else classname += \"is-invalid\";\r\n    }\r\n    return classname;\r\n  };\r\n\r\n  toggleNavDropdown = () => {\r\n    let isNavbarOpen = this.state.isNavbarOpen;\r\n    if (isNavbarOpen) isNavbarOpen = false;\r\n    else isNavbarOpen = true;\r\n    this.setState({ isNavbarOpen });\r\n  };\r\n\r\n  toggleAlgoDropdown = () => {\r\n    let isAlgorithmOpen = this.state.isAlgorithmOpen;\r\n    if (isAlgorithmOpen) isAlgorithmOpen = false;\r\n    else isAlgorithmOpen = true;\r\n    this.setState({ isAlgorithmOpen });\r\n  };\r\n\r\n  render() {\r\n    const classOfInputbox = this.getClassOfInputbox();\r\n    const dropdownAlgorithmMenu = `dropdown-menu${\r\n      this.state.isAlgorithmOpen ? \"show\" : \"\"\r\n    }`;\r\n\r\n    const dropdownNavbarMenu = `${\r\n      this.state.isNavbarOpen\r\n        ? \"expand navbar-expand\"\r\n        : \"collapse navbar-collapse\"\r\n    }`;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-warning\">\r\n          <div className=\"container-fluid\" id=\"navfluid\">\r\n            <div className=\"navbar-header\">\r\n              <button\r\n                onClick={this.toggleNavDropdown}\r\n                type=\"button\"\r\n                className=\"navbar-toggler\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\"#navbarNavDropdown\"\r\n                aria-controls=\"navbarNavDropdown\"\r\n                aria-expanded=\"false\"\r\n                aria-label=\"Toggle navigation\"\r\n              >\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </button>\r\n            </div>\r\n            <div className={dropdownNavbarMenu} id=\"navbarNavDropdown\">\r\n              <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item active\">\r\n                  <button\r\n                    className=\"btn btn-sm btn-danger m-2\"\r\n                    onClick={() => {\r\n                      window.location.reload();\r\n                    }}\r\n                  >\r\n                    Home <span className=\"sr-only\">(current)</span>\r\n                  </button>\r\n                </li>\r\n                <li className=\"nav-item dropdown\">\r\n                  <button\r\n                    onClick={this.toggleAlgoDropdown}\r\n                    className=\"btn btn-danger m-2 ml-3 btn-sm dropdown-toggle\"\r\n                    id=\"navbarDropdownMenuLink\"\r\n                    data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded=\"false\"\r\n                  >\r\n                    Sort Algorithms\r\n                  </button>\r\n                  <div\r\n                    className={dropdownAlgorithmMenu}\r\n                    aria-labelledby=\"navbarDropdownMenuLink\"\r\n                  >\r\n                    <button\r\n                      className=\"dropdown-item\"\r\n                      onClick={() => this.props.OnClick(\"Bubble\")}\r\n                    >\r\n                      Bubble Sort\r\n                    </button>\r\n                    <button\r\n                      className=\"dropdown-item\"\r\n                      onClick={() => this.props.OnClick(\"Selection\")}\r\n                    >\r\n                      Selection Sort\r\n                    </button>\r\n                    <button\r\n                      className=\"dropdown-item\"\r\n                      onClick={() => this.props.OnClick(\"Insertion\")}\r\n                    >\r\n                      Insertion Sort\r\n                    </button>\r\n                    <button\r\n                      className=\"dropdown-item\"\r\n                      onClick={() => this.props.OnClick(\"Quick\")}\r\n                    >\r\n                      Quick Sort\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n              <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <div className=\"form-item\">\r\n                    <span className=\"badge badge-dark\">\r\n                      Input Numbers:{\" \"}\r\n                      <span\r\n                        className={`badge badge-${\r\n                          this.props.state.isInput\r\n                            ? `${\r\n                                this.props.state.arr.length > 0\r\n                                  ? \"success\"\r\n                                  : \"danger\"\r\n                              }`\r\n                            : \"danger\"\r\n                        }`}\r\n                      >\r\n                        {this.props.state.isInput\r\n                          ? this.props.state.arr.length\r\n                          : 0}\r\n                      </span>\r\n                    </span>\r\n                    <textarea\r\n                      ref={input => (this.input = input)}\r\n                      onInput={() => {\r\n                        this.props.setInput(this.input);\r\n                      }}\r\n                      className={classOfInputbox}\r\n                      id=\"Input\"\r\n                      type=\"text\"\r\n                      rows=\"2\"\r\n                      cols=\"40\"\r\n                      placeholder=\"Example Input: 124 45 89 90\"\r\n                    />\r\n                    <small className=\"form-text text-muted\">\r\n                      Your input must be 1-25 numbers long, contain space\r\n                      seperated numbers only.\r\n                    </small>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark m-4\"\r\n                      onClick={() => {\r\n                        this.props.OnClick(\"Submit\");\r\n                      }}\r\n                    >\r\n                      Reset\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark m-4\"\r\n                      onClick={() => {\r\n                        this.props.OnClick(\"Random\");\r\n                      }}\r\n                    >\r\n                      Random\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <footer className=\"page-footer font-small blue pt-4 text-white bg-dark\">\r\n          <div className=\"container-fluid text-center text-md-left\">\r\n            <div className=\"footer-copyright text-center py-3\">\r\n              © 2018 Copyright:\r\n              <a href=\"https://wavestudy.tech/\"> wavestudy.tech</a>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import { isUndefined } from \"util\";\r\n\r\nclass Algorithm {\r\n  constructor() {\r\n    this.color = {\r\n      indexA: 0,\r\n      indexB: 0,\r\n      indexRangeOfSorted: []\r\n    };\r\n  }\r\n  //Helper function to generate a delay\r\n  delayed = (function() {\r\n    let queue = [];\r\n\r\n    function processQueue() {\r\n      if (queue.length > 0) {\r\n        setTimeout(function() {\r\n          queue.shift().cb();\r\n          processQueue();\r\n        }, queue[0].delay);\r\n      }\r\n    }\r\n\r\n    return function(delay, cb) {\r\n      queue.push({ delay: delay, cb: cb });\r\n\r\n      if (queue.length === 1) {\r\n        processQueue();\r\n      }\r\n    };\r\n  })();\r\n\r\n  validateInput = val => {\r\n    let temp = \"\";\r\n    let arr = [];\r\n    let j = 0;\r\n    val = val.trim();\r\n    val += \" \";\r\n    if (val.length === 0) return false;\r\n    else {\r\n      for (let i = 0; i < val.length; i++) {\r\n        if (val.charAt(i) !== \" \" && val.charAt(i) !== \"\\n\") {\r\n          if (isNaN(parseInt(val.charAt(i)))) return false;\r\n          else temp += val.charAt(i).toString();\r\n        } else {\r\n          if (temp === \"\") continue;\r\n          temp = parseInt(temp);\r\n          if (isNaN(temp)) return false;\r\n          else {\r\n            arr[j++] = temp;\r\n            temp = \"\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  insertionSort = (array, ref) => {\r\n    let state = ref.getState();\r\n    if (state.loopControls.isSorting) {\r\n      state.loopControls = { isSorting: true, breakSort: true };\r\n      ref.setState({ loopControls: state.loopControls });\r\n    }\r\n    state.loopControls = { isSorting: true, breakSort: false };\r\n    ref.setState({ loopControls: state.loopControls });\r\n\r\n    let arr = [...array];\r\n    let i,\r\n      key,\r\n      j,\r\n      k = 0;\r\n    let n = arr.length;\r\n    let operation = [];\r\n\r\n    for (i = 1; i < n; i++) {\r\n      key = arr[i];\r\n      j = i - 1;\r\n      while (j >= 0 && arr[j] > key) {\r\n        arr[j + 1] = arr[j];\r\n        operation[k++] = { i: j + 1, j: j, sorted: i };\r\n        j = j - 1;\r\n      }\r\n      arr[j + 1] = key;\r\n      operation[k++] = { i: j + 1, key: key, sorted: i };\r\n    }\r\n\r\n    operation[k] = { i: j + 1, key: \"last\", sorted: i };\r\n\r\n    arr = [...array];\r\n\r\n    for (i = 0; i < operation.length; i++) {\r\n      this.delayed(\r\n        state.speed,\r\n        (i => {\r\n          return () => {\r\n            if (state.loopControls.breakSort) {\r\n              ref.setState({\r\n                loopControls: { isSorting: false, breakSort: false }\r\n              });\r\n              clearTimeout();\r\n              return;\r\n            }\r\n            if (isUndefined(operation[i].key)) {\r\n              let temp = arr[operation[i].j];\r\n              arr[operation[i].j] = arr[operation[i].i];\r\n              arr[operation[i].i] = temp;\r\n              this.color.indexA = operation[i].i;\r\n              this.color.indexB = operation[i].j;\r\n              this.color.indexRangeOfSorted = {\r\n                range: 1,\r\n                from: 0,\r\n                to: operation[i].sorted\r\n              };\r\n              ref.setState({ arr, color: this.color });\r\n            } else if (operation[i].key === \"last\") {\r\n              this.color.indexRangeOfSorted = {\r\n                range: 0,\r\n                from: -1,\r\n                to: -1\r\n              };\r\n              this.color.indexA = -1;\r\n              this.color.indexB = -1;\r\n              ref.setState({ arr, color: this.color });\r\n            } else {\r\n              arr[operation[i].i] = operation[i].key;\r\n              this.color.indexA = operation[i].i;\r\n              this.color.indexB = operation[i].j;\r\n              this.color.indexRangeOfSorted = {\r\n                range: 1,\r\n                from: 0,\r\n                to: operation[i].sorted\r\n              };\r\n              ref.setState({ arr, color: this.color });\r\n            }\r\n          };\r\n        })(i)\r\n      );\r\n    }\r\n  };\r\n\r\n  quickSort = (array, ref) => {\r\n    let state = ref.getState();\r\n    if (state.loopControls.isSorting) {\r\n      state.loopControls = { isSorting: true, breakSort: true };\r\n      ref.setState({ loopControls: state.loopControls });\r\n    }\r\n    state.loopControls = { isSorting: true, breakSort: false };\r\n    ref.setState({ loopControls: state.loopControls });\r\n\r\n    let arr = [...array];\r\n    let k = 0,\r\n      operation = [];\r\n\r\n    const partition = (arr, l, h) => {\r\n      let x = arr[h];\r\n      let i = l - 1;\r\n\r\n      for (let j = l; j <= h - 1; j++) {\r\n        if (arr[j] <= x) {\r\n          i++;\r\n          let temp = arr[i];\r\n          arr[i] = arr[j];\r\n          arr[j] = temp;\r\n          operation[k++] = { i: i, j: j };\r\n        }\r\n      }\r\n      let temp = arr[i + 1];\r\n      arr[i + 1] = arr[h];\r\n      arr[h] = temp;\r\n      operation[k++] = { i: i + 1, j: h };\r\n      return i + 1;\r\n    };\r\n\r\n    const qSort = (A, l, h) => {\r\n      if (l < h) {\r\n        /* Partitioning index */\r\n        let p = partition(A, l, h);\r\n        qSort(A, l, p - 1);\r\n        qSort(A, p + 1, h);\r\n      }\r\n    };\r\n    qSort(arr, 0, arr.length - 1);\r\n\r\n    arr = [...array];\r\n    for (let i = 0; i < operation.length; i++) {\r\n      this.delayed(\r\n        state.speed,\r\n        (i => {\r\n          return () => {\r\n            if (state.loopControls.breakSort) {\r\n              ref.setState({\r\n                loopControls: { isSorting: false, breakSort: false }\r\n              });\r\n              clearTimeout();\r\n              return;\r\n            }\r\n            let temp = arr[operation[i].j];\r\n            arr[operation[i].j] = arr[operation[i].i];\r\n            arr[operation[i].i] = temp;\r\n            this.color.indexA = operation[i].i;\r\n            this.color.indexB = operation[i].j;\r\n            this.color.indexRangeOfSorted = {\r\n              range: 1,\r\n              from: -1,\r\n              to: -1\r\n            };\r\n            ref.setState({ arr, color: this.color });\r\n          };\r\n        })(i)\r\n      );\r\n    }\r\n  };\r\n\r\n  selectionSort = (array, ref) => {\r\n    let state = ref.getState();\r\n    if (state.loopControls.isSorting) {\r\n      state.loopControls = { isSorting: true, breakSort: true };\r\n      ref.setState({ loopControls: state.loopControls });\r\n    }\r\n    state.loopControls = { isSorting: true, breakSort: false };\r\n    ref.setState({ loopControls: state.loopControls });\r\n\r\n    let arr = [...array];\r\n    let n = arr.length;\r\n    let i, j, min_idx;\r\n    let operation = [];\r\n    let k = 0;\r\n\r\n    for (i = 0; i < n - 1; i++) {\r\n      min_idx = i;\r\n      for (j = i + 1; j < n; j++) {\r\n        if (arr[j] < arr[min_idx]) {\r\n          min_idx = j;\r\n        }\r\n        operation[k++] = {\r\n          i: i,\r\n          j: j,\r\n          min_idx: min_idx,\r\n          swap: false,\r\n          sorted: i\r\n        };\r\n      }\r\n      let temp = arr[min_idx];\r\n      arr[min_idx] = arr[i];\r\n      arr[i] = temp;\r\n      operation[k++] = { i: i, j: j, min_idx: min_idx, swap: true, sorted: i };\r\n    }\r\n\r\n    operation[k++] = { i: i, j: j, min_idx: min_idx, swap: false, sorted: i };\r\n    operation[k++] = { i: -1, j: -1, min_idx: -1, swap: false, sorted: -1 };\r\n\r\n    arr = [...array];\r\n\r\n    for (i = 0; i < operation.length; i++) {\r\n      this.delayed(\r\n        state.speed,\r\n        (i => {\r\n          return () => {\r\n            if (state.loopControls.breakSort) {\r\n              ref.setState({\r\n                loopControls: { isSorting: false, breakSort: false }\r\n              });\r\n              clearTimeout();\r\n              return;\r\n            }\r\n            if (operation[i].swap === true) {\r\n              let temp = arr[operation[i].min_idx];\r\n              arr[operation[i].min_idx] = arr[operation[i].i];\r\n              arr[operation[i].i] = temp;\r\n              this.color.indexA = operation[i].min_idx;\r\n              this.color.indexB = operation[i].j;\r\n              this.color.indexRangeOfSorted = {\r\n                range: 1,\r\n                from: 0,\r\n                to: operation[i].sorted\r\n              };\r\n              ref.setState({ arr, color: this.color });\r\n            } else {\r\n              this.color.indexA = operation[i].min_idx;\r\n              this.color.indexB = operation[i].j;\r\n              this.color.indexRangeOfSorted = {\r\n                range: 1,\r\n                from: 0,\r\n                to: operation[i].sorted\r\n              };\r\n              ref.setState({ arr, color: this.color });\r\n            }\r\n          };\r\n        })(i)\r\n      );\r\n    }\r\n  };\r\n\r\n  bubbleSort = (array, ref) => {\r\n    let state = ref.getState();\r\n    if (state.loopControls.isSorting) {\r\n      state.loopControls = { isSorting: true, breakSort: true };\r\n      ref.setState({ loopControls: state.loopControls });\r\n    }\r\n    state.loopControls = { isSorting: true, breakSort: false };\r\n    ref.setState({ loopControls: state.loopControls });\r\n\r\n    let arr = [...array],\r\n      k = 0;\r\n    let len = arr.length;\r\n    let operation = [];\r\n\r\n    let i, j;\r\n\r\n    for (i = 0; i < len - 1; i += 1) {\r\n      for (j = 0; j < len - i; j += 1) {\r\n        if (arr[j - 1] > arr[j]) {\r\n          let temp = arr[j - 1];\r\n          arr[j - 1] = arr[j];\r\n          arr[j] = temp;\r\n          operation[k++] = { sorted: i, i: j - 1, j: j, swap: true };\r\n        } else operation[k++] = { sorted: i, i: j - 1, j: j, swap: false };\r\n      }\r\n    }\r\n\r\n    operation[k++] = { sorted: len, i: -1, j: -1, swap: false };\r\n    operation[k] = { sorted: len, i: -1, j: -1, swap: \"last\" };\r\n\r\n    arr = [...array];\r\n    for (let i = 0; i < operation.length; i++) {\r\n      this.delayed(\r\n        state.speed,\r\n        (i => {\r\n          return () => {\r\n            if (state.loopControls.breakSort) {\r\n              ref.setState({\r\n                loopControls: { isSorting: false, breakSort: false }\r\n              });\r\n              clearTimeout();\r\n              return;\r\n            }\r\n            if (operation[i].swap === true) {\r\n              let temp = arr[operation[i].j];\r\n              arr[operation[i].j] = arr[operation[i].i];\r\n              arr[operation[i].i] = temp;\r\n              this.color.indexA = operation[i].i;\r\n              this.color.indexB = operation[i].j;\r\n              this.color.indexRangeOfSorted = {\r\n                range: 1,\r\n                from: arr.length - operation[i].sorted,\r\n                to: arr.length\r\n              };\r\n              ref.setState({ arr, color: this.color });\r\n            } else if (operation[i].swap === false) {\r\n              this.color.indexRangeOfSorted = {\r\n                range: 1,\r\n                from: arr.length - operation[i].sorted,\r\n                to: arr.length\r\n              };\r\n              this.color.indexA = operation[i].i;\r\n              this.color.indexB = operation[i].j;\r\n              ref.setState({ arr, color: this.color });\r\n            } else {\r\n              this.color.indexRangeOfSorted = {\r\n                range: 0,\r\n                from: -1,\r\n                to: -1\r\n              };\r\n              this.color.indexA = -1;\r\n              this.color.indexB = -1;\r\n              ref.setState({ arr, color: this.color });\r\n            }\r\n          };\r\n        })(i)\r\n      );\r\n    }\r\n  };\r\n}\r\n\r\nexport default Algorithm;\r\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Sort from \"./components/sort/sort\";\nimport Navbar from \"./components/navbar/navbar\";\nimport Footer from \"./components/footer/footer\";\nimport Algorithm from \"./components/algorithms\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    let arr = [10, 50, 3, 1, 90];\n    for (let i = 0; i < 25; i++) arr[i] = Math.floor(Math.random() * 100 + 1);\n    this.state = {\n      arr: [...arr],\n      color: {\n        indexA: -1,\n        indexB: -1,\n        indexRangeOfSorted: {\n          range: 0,\n          from: -1,\n          to: -1\n        }\n      },\n      speed: 1000,\n      ref: this,\n      isInputValid: false,\n      isInput: false,\n      loopControls: {\n        isSorting: false,\n        breakSort: false\n      }\n    };\n    this.backupArray = [...arr];\n  }\n\n  setSpeed = event => {\n    let speed;\n    if (event.target.value === \"medium\") {\n      speed = 100;\n      this.setState({ speed });\n    }\n    if (event.target.value === \"fast\") {\n      speed = 10;\n      this.setState({ speed });\n    }\n    if (event.target.value === \"slow\") {\n      speed = 1000;\n      this.setState({ speed });\n    }\n  };\n\n  getState = () => {\n    return this.state;\n  };\n\n  validateInputOnChange = input => {\n    //Set Input in this.input\n    this.input = input;\n\n    //validation on any change in inputboxs Also set isInput for count of input\n    const algorithms = new Algorithm();\n    const arr = algorithms.validateInput(this.input.value);\n    if (arr === false) {\n      this.setState({ isInputValid: false, isInput: true });\n    } else {\n      if (arr.length > 25)\n        this.setState({ isInputValid: false, isInput: true });\n      else {\n        this.arr = arr;\n        this.setState({ arr, isInputValid: true, isInput: true });\n        this.backupArray = [...arr];\n      }\n    }\n  };\n\n  handleNavbarClick = name => {\n    let arr = [...this.state.arr];\n    const algorithm = new Algorithm();\n    if (name === \"Bubble\") {\n      algorithm.bubbleSort(arr, this);\n    } else if (name === \"Insertion\") {\n      algorithm.insertionSort(arr, this);\n    } else if (name === \"Selection\") {\n      algorithm.selectionSort(arr, this);\n    } else if (name === \"Quick\") {\n      algorithm.quickSort(arr, this);\n    } else if (name === \"Merge\") {\n      algorithm.mergeSort(arr, this);\n    } else if (name === \"Submit\") {\n      let arr = [...this.backupArray];\n      this.setState({ arr });\n    } else if (name === \"Random\") {\n      let arr = [];\n      for (let i = 0; i < 25; i++) arr[i] = Math.floor(Math.random() * 100 + 1);\n      this.setState({ arr });\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar\n          state={this.state}\n          OnClick={this.handleNavbarClick}\n          setInput={input => {\n            this.validateInputOnChange(input);\n          }}\n        />\n        <div style={{ width: \"100%\", height: \"100px\" }} className=\"bg-white\">\n          <div\n            style={{\n              width: \"220px\",\n              margin: \"0px auto\"\n            }}\n          >\n            <span className=\"badge badge-primary m-2\">\n              <input\n                type=\"radio\"\n                name=\"speed\"\n                value=\"slow\"\n                onChange={event => {\n                  this.setSpeed(event);\n                }}\n              />\n              slow\n            </span>\n            <span className=\"badge badge-primary m-2\">\n              <input\n                type=\"radio\"\n                name=\"speed\"\n                value=\"medium\"\n                onChange={event => {\n                  this.setSpeed(event);\n                }}\n              />\n              medium\n            </span>\n            <span className=\"badge badge-primary m-2\">\n              <input\n                type=\"radio\"\n                name=\"speed\"\n                value=\"fast\"\n                onChange={event => {\n                  this.setSpeed(event);\n                }}\n              />\n              fast\n            </span>\n            <small className=\"form-text text-muted\" style={{ margin: \"5px\" }}>\n              Note: Set speed before sorting only.\n            </small>\n          </div>\n        </div>\n        <Sort state={this.state} />\n        <div\n          style={{ width: \"100%\", height: \"100px\" }}\n          className=\"bg-white\"\n        ></div>\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}