{"version":3,"sources":["components/sort/strip.jsx","components/sort/sort.jsx","components/navbar/navbar.jsx","components/footer/footer.jsx","components/algorithms.js","App.js","serviceWorker.js","index.js"],"names":["Strip","style","width","this","props","noOfStrips","height","margin","className","fontSize","value","backgroundColor","Component","Sort","display","alignItems","state","arr","length","map","stripLength","index","Math","max","apply","color","key","Navbar","getClassOfInputbox","classname","isInput","isInputValid","toggleNavDropdown","isNavbarOpen","setState","toggleAlgoDropdown","isAlgorithmOpen","classOfInputbox","dropdownAlgorithmMenu","dropdownNavbarMenu","Fragment","id","onClick","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","window","location","reload","aria-haspopup","aria-labelledby","OnClick","ref","input","onInput","setInput","rows","cols","placeholder","Footer","href","Algorithm","delayed","queue","delay","cb","push","processQueue","setTimeout","shift","validateInput","val","temp","j","trim","i","charAt","isNaN","parseInt","toString","insertionSort","array","k","n","operation","undefined","quickSort","qSort","A","l","h","p","x","partition","mergeSort","console","log","mSort","r","m","n1","n2","L","R","Merge","selectionSort","min_idx","swap","bubbleSort","len","App","validateInputOnChange","backupArray","handleNavbarClick","name","algorithm","floor","random","isSorting","breakSort","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d08e1be7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Strip extends Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        style={{\r\n          width: `${100 / this.props.noOfStrips}%`\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            width: \"80%\",\r\n            height: \"20px\",\r\n            margin: \"0px auto\"\r\n          }}\r\n        >\r\n          <p className=\"text-center text-dark\" style={{ fontSize: \"10px\" }}>\r\n            {this.props.value}\r\n          </p>\r\n        </div>\r\n        <div\r\n          style={{\r\n            width: \"80%\",\r\n            height: `${this.props.style.height}px`,\r\n            backgroundColor: `${this.props.style.backgroundColor}`,\r\n            margin: \"0px auto\"\r\n          }}\r\n        ></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Strip;\r\n","import React, { Component } from \"react\";\r\nimport Strip from \"./strip\";\r\n\r\nclass Sort extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"flex-end\",\r\n            height: \"325px\",\r\n            margin: \"0px auto\",\r\n            width: `${this.props.state.arr.length * 3}%`\r\n          }}\r\n        >\r\n          {this.props.state.arr.map((stripLength, index) => {\r\n            let height =\r\n              (stripLength * 300) / Math.max.apply(null, this.props.state.arr);\r\n            let width =\r\n              this.props.state.arr.length <= 5\r\n                ? 200\r\n                : 1000 / this.props.state.arr.length;\r\n\r\n            let color = \"#4B65BA\";\r\n            if (index === this.props.state.index) color = \"orange\";\r\n\r\n            return (\r\n              <Strip\r\n                value={stripLength}\r\n                style={{\r\n                  height: height,\r\n                  width: width,\r\n                  backgroundColor: color\r\n                }}\r\n                key={index}\r\n                noOfStrips={this.props.state.arr.length}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sort;\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nclass Navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { isAlgorithmOpen: false, isNavbarOpen: false };\r\n  }\r\n\r\n  getClassOfInputbox = () => {\r\n    let classname = \"form-control \";\r\n    if (this.props.state.isInput) {\r\n      if (this.props.state.isInputValid && this.props.state.arr.length > 0)\r\n        classname += \"is-valid\";\r\n      else classname += \"is-invalid\";\r\n    }\r\n    return classname;\r\n  };\r\n\r\n  toggleNavDropdown = () => {\r\n    let isNavbarOpen = this.state.isNavbarOpen;\r\n    if (isNavbarOpen) isNavbarOpen = false;\r\n    else isNavbarOpen = true;\r\n    this.setState({ isNavbarOpen });\r\n  };\r\n\r\n  toggleAlgoDropdown = () => {\r\n    let isAlgorithmOpen = this.state.isAlgorithmOpen;\r\n    if (isAlgorithmOpen) isAlgorithmOpen = false;\r\n    else isAlgorithmOpen = true;\r\n    this.setState({ isAlgorithmOpen });\r\n  };\r\n\r\n  render() {\r\n    const classOfInputbox = this.getClassOfInputbox();\r\n    const dropdownAlgorithmMenu = `dropdown-menu${\r\n      this.state.isAlgorithmOpen ? \"show\" : \"\"\r\n    }`;\r\n\r\n    const dropdownNavbarMenu = `${\r\n      this.state.isNavbarOpen\r\n        ? \"expand navbar-expand\"\r\n        : \"collapse navbar-collapse\"\r\n    }`;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-warning\">\r\n          <div className=\"container-fluid\" id=\"navfluid\">\r\n            <div className=\"navbar-header\">\r\n              <button\r\n                onClick={this.toggleNavDropdown}\r\n                type=\"button\"\r\n                className=\"navbar-toggler\"\r\n                data-toggle=\"collapse\"\r\n                data-target=\"#navbarNavDropdown\"\r\n                aria-controls=\"navbarNavDropdown\"\r\n                aria-expanded=\"false\"\r\n                aria-label=\"Toggle navigation\"\r\n              >\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n              </button>\r\n            </div>\r\n            <div className={dropdownNavbarMenu} id=\"navbarNavDropdown\">\r\n              <ul className=\"navbar-nav\">\r\n                <li className=\"nav-item active\">\r\n                  <button\r\n                    className=\"btn btn-sm btn-danger m-2\"\r\n                    onClick={() => {\r\n                      window.location.reload();\r\n                    }}\r\n                  >\r\n                    Home <span className=\"sr-only\">(current)</span>\r\n                  </button>\r\n                </li>\r\n                <li className=\"nav-item dropdown\">\r\n                  <button\r\n                    onClick={this.toggleAlgoDropdown}\r\n                    className=\"btn btn-danger m-2 ml-3 btn-sm dropdown-toggle\"\r\n                    id=\"navbarDropdownMenuLink\"\r\n                    data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded=\"false\"\r\n                  >\r\n                    Sort Algorithms\r\n                  </button>\r\n                  <div\r\n                    className={dropdownAlgorithmMenu}\r\n                    aria-labelledby=\"navbarDropdownMenuLink\"\r\n                  >\r\n                    <button\r\n                      className=\"dropdown-item\"\r\n                      onClick={() => this.props.OnClick(\"Bubble\")}\r\n                    >\r\n                      Bubble Sort\r\n                    </button>\r\n                    <button\r\n                      className=\"dropdown-item\"\r\n                      onClick={() => this.props.OnClick(\"Selection\")}\r\n                    >\r\n                      Selection Sort\r\n                    </button>\r\n                    <button\r\n                      className=\"dropdown-item\"\r\n                      onClick={() => this.props.OnClick(\"Insertion\")}\r\n                    >\r\n                      Insertion Sort\r\n                    </button>\r\n                    <button\r\n                      className=\"dropdown-item\"\r\n                      onClick={() => this.props.OnClick(\"Quick\")}\r\n                    >\r\n                      Quick Sort\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n              <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                  <div className=\"form-item\">\r\n                    <span className=\"badge badge-dark\">\r\n                      Input Numbers:{\" \"}\r\n                      <span\r\n                        className={`badge badge-${\r\n                          this.props.state.isInput\r\n                            ? `${\r\n                                this.props.state.arr.length > 0\r\n                                  ? \"success\"\r\n                                  : \"danger\"\r\n                              }`\r\n                            : \"danger\"\r\n                        }`}\r\n                      >\r\n                        {this.props.state.isInput\r\n                          ? this.props.state.arr.length\r\n                          : 0}\r\n                      </span>\r\n                    </span>\r\n                    <textarea\r\n                      ref={input => (this.input = input)}\r\n                      onInput={() => {\r\n                        this.props.setInput(this.input);\r\n                      }}\r\n                      className={classOfInputbox}\r\n                      id=\"Input\"\r\n                      type=\"text\"\r\n                      rows=\"2\"\r\n                      cols=\"40\"\r\n                      placeholder=\"Example Input: 124 45 89 90\"\r\n                    />\r\n                    <small className=\"form-text text-muted\">\r\n                      Your input must be 1-25 numbers long, contain space\r\n                      seperated numbers only.\r\n                    </small>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark m-4\"\r\n                      onClick={() => {\r\n                        this.props.OnClick(\"Submit\");\r\n                      }}\r\n                    >\r\n                      Reset\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-sm btn-dark m-4\"\r\n                      onClick={() => {\r\n                        this.props.OnClick(\"Random\");\r\n                      }}\r\n                    >\r\n                      Random\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <footer className=\"page-footer font-small blue pt-4 text-white bg-dark\">\r\n          <div className=\"container-fluid text-center text-md-left\">\r\n            <div className=\"footer-copyright text-center py-3\">\r\n              © 2018 Copyright:\r\n              <a href=\"https://wavestudy.tech/\"> wavestudy.tech</a>\r\n            </div>\r\n          </div>\r\n        </footer>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","class Algorithm {\r\n  //Helper function to generate a delay\r\n  delayed = (function() {\r\n    let queue = [];\r\n\r\n    function processQueue() {\r\n      if (queue.length > 0) {\r\n        setTimeout(function() {\r\n          queue.shift().cb();\r\n          processQueue();\r\n        }, queue[0].delay);\r\n      }\r\n    }\r\n\r\n    return function(delay, cb) {\r\n      queue.push({ delay: delay, cb: cb });\r\n\r\n      if (queue.length === 1) {\r\n        processQueue();\r\n      }\r\n    };\r\n  })();\r\n\r\n  validateInput = val => {\r\n    let temp = \"\";\r\n    let arr = [];\r\n    let j = 0;\r\n    val = val.trim();\r\n    val += \" \";\r\n    if (val.length === 0) return false;\r\n    else {\r\n      for (let i = 0; i < val.length; i++) {\r\n        if (val.charAt(i) !== \" \" && val.charAt(i) !== \"\\n\") {\r\n          if (isNaN(parseInt(val.charAt(i)))) return false;\r\n          else temp += val.charAt(i).toString();\r\n        } else {\r\n          if (temp === \"\") continue;\r\n          temp = parseInt(temp);\r\n          if (isNaN(temp)) return false;\r\n          else {\r\n            arr[j++] = temp;\r\n            temp = \"\";\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return arr;\r\n  };\r\n\r\n  insertionSort = (array, ref) => {\r\n    let arr = [...array];\r\n    let i,\r\n      key,\r\n      j,\r\n      k = 0;\r\n    let n = arr.length;\r\n    let operation = [];\r\n\r\n    for (i = 1; i < n; i++) {\r\n      key = arr[i];\r\n      j = i - 1;\r\n      while (j >= 0 && arr[j] > key) {\r\n        arr[j + 1] = arr[j];\r\n        operation[k++] = { i: j + 1, j: j };\r\n        j = j - 1;\r\n      }\r\n      arr[j + 1] = key;\r\n      operation[k++] = { i: j + 1, key: key };\r\n    }\r\n\r\n    arr = [...array];\r\n\r\n    for (i = 0; i < operation.length; i++) {\r\n      this.delayed(\r\n        100,\r\n        (i => {\r\n          return () => {\r\n            if (undefined === operation[i].key) {\r\n              let temp = arr[operation[i].j];\r\n              arr[operation[i].j] = arr[operation[i].i];\r\n              arr[operation[i].i] = temp;\r\n              let index = operation[i].j;\r\n              ref.setState({ arr, index });\r\n            } else {\r\n              arr[operation[i].i] = operation[i].key;\r\n              let index = operation[i].j;\r\n              ref.setState({ index });\r\n            }\r\n          };\r\n        })(i)\r\n      );\r\n    }\r\n  };\r\n\r\n  quickSort = (array, ref) => {\r\n    let arr = [...array];\r\n    let k = 0,\r\n      operation = [];\r\n\r\n    const partition = (arr, l, h) => {\r\n      let x = arr[h];\r\n      let i = l - 1;\r\n\r\n      for (let j = l; j <= h - 1; j++) {\r\n        if (arr[j] <= x) {\r\n          i++;\r\n          let temp = arr[i];\r\n          arr[i] = arr[j];\r\n          arr[j] = temp;\r\n          operation[k++] = { i: i, j: j };\r\n        }\r\n      }\r\n      let temp = arr[i + 1];\r\n      arr[i + 1] = arr[h];\r\n      arr[h] = temp;\r\n      operation[k++] = { i: i + 1, j: h };\r\n      return i + 1;\r\n    };\r\n\r\n    const qSort = (A, l, h) => {\r\n      if (l < h) {\r\n        /* Partitioning index */\r\n        let p = partition(A, l, h);\r\n        qSort(A, l, p - 1);\r\n        qSort(A, p + 1, h);\r\n      }\r\n    };\r\n    qSort(arr, 0, arr.length - 1);\r\n\r\n    arr = [...array];\r\n    for (let i = 0; i < operation.length; i++) {\r\n      this.delayed(\r\n        100,\r\n        (i => {\r\n          return () => {\r\n            let temp = arr[operation[i].j];\r\n            arr[operation[i].j] = arr[operation[i].i];\r\n            arr[operation[i].i] = temp;\r\n            let index = operation[i].j;\r\n            ref.setState({ arr, index });\r\n          };\r\n        })(i)\r\n      );\r\n    }\r\n  };\r\n\r\n  mergeSort = (arr, ref) => {\r\n    console.log(arr);\r\n    let operation = [],\r\n      t = 0;\r\n\r\n    const Merge = (arr, l, m, r) => {\r\n      let array = [...arr];\r\n      let i, j, k;\r\n      let n1 = m - l + 1;\r\n      let n2 = r - m;\r\n\r\n      let L = [],\r\n        R = [];\r\n\r\n      for (i = 0; i < n1; i++) L[i] = array[l + i];\r\n      for (j = 0; j < n2; j++) R[j] = array[m + 1 + j];\r\n\r\n      i = 0;\r\n      j = 0;\r\n      k = l;\r\n      while (i < n1 && j < n2) {\r\n        if (L[i] <= R[j]) {\r\n          array[k] = L[i];\r\n          // operation[t++] = { i: k, value: arr[k] };\r\n          i++;\r\n        } else {\r\n          array[k] = R[j];\r\n          // operation[t++] = { i: k, value: arr[k] };\r\n          j++;\r\n        }\r\n        k++;\r\n      }\r\n\r\n      while (i < n1) {\r\n        array[k] = L[i];\r\n        //operation[t++] = { i: k, value: arr[k] };\r\n        i++;\r\n        k++;\r\n      }\r\n\r\n      while (j < n2) {\r\n        array[k] = R[j];\r\n        //operation[t++] = { i: k, value: arr[k] };\r\n        j++;\r\n        k++;\r\n      }\r\n    };\r\n\r\n    const mSort = (A, l, r) => {\r\n      if (l < r) {\r\n        let m = l + (r - l) / 2;\r\n        mSort(A, l, m);\r\n        mSort(A, m + 1, r);\r\n        Merge(A, l, m, r);\r\n      }\r\n    };\r\n    console.log(arr);\r\n    mSort(arr, 0, arr.length - 1);\r\n  };\r\n\r\n  selectionSort = (array, ref) => {\r\n    let arr = [...array];\r\n    let n = arr.length;\r\n    let i, j, min_idx;\r\n    let operation = [];\r\n    let k = 0;\r\n\r\n    for (i = 0; i < n - 1; i++) {\r\n      min_idx = i;\r\n      for (j = i + 1; j < n; j++) {\r\n        if (arr[j] < arr[min_idx]) {\r\n          min_idx = j;\r\n          operation[k++] = { i: i, j: min_idx, swap: false };\r\n        }\r\n      }\r\n      let temp = arr[min_idx];\r\n      arr[min_idx] = arr[i];\r\n      arr[i] = temp;\r\n      operation[k++] = { i: i, j: min_idx, swap: true };\r\n    }\r\n\r\n    arr = [...array];\r\n\r\n    for (i = 0; i < operation.length; i++) {\r\n      this.delayed(\r\n        100,\r\n        (i => {\r\n          return () => {\r\n            if (operation[i].swap) {\r\n              let temp = arr[operation[i].j];\r\n              arr[operation[i].j] = arr[operation[i].i];\r\n              arr[operation[i].i] = temp;\r\n              let index = operation[i].j;\r\n              ref.setState({ arr, index });\r\n            } else {\r\n              let index = operation[i].j;\r\n              ref.setState({ index });\r\n            }\r\n          };\r\n        })(i)\r\n      );\r\n    }\r\n  };\r\n\r\n  bubbleSort = (arr, ref) => {\r\n    let len = arr.length;\r\n\r\n    for (let i = 0; i < len - 1; i += 1) {\r\n      for (let j = 1; j < len - i; j += 1) {\r\n        // add function to the queue, shadowing i/j with an IIFE:\r\n        this.delayed(100, () => {\r\n          if (arr[j - 1] > arr[j]) {\r\n            let temp = arr[j - 1];\r\n            arr[j - 1] = arr[j];\r\n            arr[j] = temp;\r\n          }\r\n          let index = j;\r\n          ref.setState({ arr, index });\r\n        });\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport default Algorithm;\r\n","import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Sort from \"./components/sort/sort\";\nimport Navbar from \"./components/navbar/navbar\";\nimport Footer from \"./components/footer/footer\";\nimport Algorithm from \"./components/algorithms\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    let arr = [10, 50, 3, 1, 90];\n    for (let i = 0; i < 25; i++) arr[i] = Math.floor(Math.random() * 100 + 1);\n    this.state = {\n      arr: [...arr],\n      index: 0,\n      ref: this,\n      isInputValid: false,\n      isInput: false,\n      isSorting: false,\n      breakSort: false\n    };\n    this.backupArray = [...arr];\n  }\n\n  validateInputOnChange = input => {\n    //Set Input in this.input\n    this.input = input;\n\n    //validation on any change in inputboxs Also set isInput for count of input\n    const algorithms = new Algorithm();\n    const arr = algorithms.validateInput(this.input.value);\n    if (arr === false) {\n      this.setState({ isInputValid: false, isInput: true });\n    } else {\n      if (arr.length > 25)\n        this.setState({ isInputValid: false, isInput: true });\n      else {\n        this.arr = arr;\n        this.setState({ arr, isInputValid: true, isInput: true });\n        this.backupArray = [...arr];\n      }\n    }\n  };\n\n  handleNavbarClick = name => {\n    let arr = [...this.state.arr];\n    const algorithm = new Algorithm();\n    if (name === \"Bubble\") {\n      algorithm.bubbleSort(arr, this);\n    } else if (name === \"Insertion\") {\n      algorithm.insertionSort(arr, this);\n    } else if (name === \"Selection\") {\n      algorithm.selectionSort(arr, this);\n    } else if (name === \"Quick\") {\n      algorithm.quickSort(arr, this);\n    } else if (name === \"Merge\") {\n      algorithm.mergeSort(arr, this);\n    } else if (name === \"Submit\") {\n      let arr = [...this.backupArray];\n      this.setState({ arr });\n    } else if (name === \"Random\") {\n      let arr = [];\n      for (let i = 0; i < 25; i++) arr[i] = Math.floor(Math.random() * 100 + 1);\n      this.setState({ arr });\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar\n          state={this.state}\n          OnClick={this.handleNavbarClick}\n          setInput={input => {\n            this.validateInputOnChange(input);\n          }}\n        />\n        <div\n          style={{ width: \"100%\", height: \"100px\" }}\n          className=\"bg-white\"\n        ></div>\n        <Sort state={this.state} />\n        <div\n          style={{ width: \"100%\", height: \"100px\" }}\n          className=\"bg-white\"\n        ></div>\n        <Footer />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}